@page "/"

<h1>Hello, welcome to the parking assistant</h1>

<p>Select what flight needs to be parked</p>
<EditForm Model="model">
    <InputSelect @bind-Value="model.aircraftType" @oninput="()=>FlightChanged()">
        @foreach (var value in Enum.GetValues(typeof(AircraftType)))
        {
            <option>@value</option>
        }
    </InputSelect>
    <p><button class="btn btn-primary" @onclick="()=>RecommendParkingSpot()">Recommend location</button></p>
    @if (RecommendedParkingSpot.Length > 0)
    {
        <p>Recommended Parking Spot is : @RecommendedParkingSpot</p>
        <p><button class="btn btn-primary" @onclick="()=>ParkAtRecommendedSpot()">Park at recommended location</button></p>
    }
</EditForm>
@if (parkedSuccessfully)
{
    <p>
        Your flight @model.aircraftType is succesfully parked in spot @RecommendedParkingSpot
    </p>
}
@if (UnableToParkError.Length > 0)
{
    <div id="blazor-error-ui">
        @UnableToParkError
    </div>
}
@inject ParkingAssistant parkingAssistant;
@inject ParkIngAssistantModel model;

@code {
    string RecommendedParkingSpot = string.Empty;
    bool parkedSuccessfully = false;

    private async Task RecommendParkingSpot()
    {
        UnableToParkError = string.Empty;

        try
        {
            RecommendedParkingSpot = await parkingAssistant.RecommendSpot(model);
        }
        catch (Exception ex)
        {
            UnableToParkError = ex.Message;
        }

    }
    private async Task ParkAtRecommendedSpot()
    {
        UnableToParkError = string.Empty;
        try
        {
            parkedSuccessfully = await parkingAssistant.Park(RecommendedParkingSpot);
            if (!parkedSuccessfully)
            {
                UnableToParkError = "Unable to park!";
            }

        }
        catch (Exception ex)
        {
            UnableToParkError = ex.Message;
        }
    }

    private async Task FlightChanged()
    {
        UnableToParkError = string.Empty;
        parkedSuccessfully = false;
        RecommendedParkingSpot = string.Empty;
        StateHasChanged();
    }

    private string UnableToParkError = string.Empty;
}


